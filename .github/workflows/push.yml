name: Continuous integration
on: push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres

      redis:
        image: redis:alpine
        ports: ["6379:6379"]

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
        ports: ["9200:9200"]
        env:
          discovery.type: single-node
          xpack.security.enabled: false

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint with RuboCop
        run: bundle exec rubocop --parallel

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: yarn

      - name: Install Node modules
        run: bin/yarn install --frozen-lockfile

      - name: Run Tests
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASSWORD: postgres
          RAILS_ENV: test
          SECRET_KEY_BASE: we-dont-need-a-secret-here
          APP_ADMIN_EMAIL: admin@example.org
          APP_ADMIN_PASSWORD: secret
          APP_EMAIL: reply@example.org
          APP_HOST: example.org
          AWS_ACCESS_KEY_ID: my-access-key
          AWS_SECRET_ACCESS_KEY: my-secret
          AWS_BUCKET: my-bucket
          AWS_REGION: eu-central-1
        run: |
          bundle exec rake db:create db:schema:load
          bundle exec rake spec

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'
    needs: test

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, push and deploy the LATEST image
        if: github.ref == 'refs/heads/develop'
        run: |
          export COMMIT_TIME=$(git show -s --format=%cD ${GITHUB_SHA})
          export COMMIT_SHA=${GITHUB_SHA}
          docker buildx build --build-arg COMMIT_TIME --build-arg COMMIT_SHA -t ghcr.io/ledermann/docker-rails/docker-rails:latest .
          docker push ghcr.io/ledermann/docker-rails/docker-rails:latest
          curl -X POST ${{ secrets.DEPLOY_HOOK_APP }}
          curl -X POST ${{ secrets.DEPLOY_HOOK_WORKER }}

      - name: Build and push the STABLE image
        if: github.ref == 'refs/heads/master'
        run: |
          docker buildx build -t ghcr.io/ledermann/docker-rails/docker-rails:stable .
          docker push ghcr.io/ledermann/docker-rails/docker-rails:stable
